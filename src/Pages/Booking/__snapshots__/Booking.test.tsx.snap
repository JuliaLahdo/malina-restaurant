// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly with no props 1`] = `
<div
  className="container"
>
  <Header
    images="bookingImages"
    title="Booking page"
  />
  <div
    className="pageHeaderContainer"
  >
    <h1
      className="pageHeading"
    >
      Make a reservation
    </h1>
  </div>
  <div
    className="pageDescription"
  >
    <p>
      So you want to book a table? 
      <strong>
        Awesome!
      </strong>
       Easily make your reservation below, where you can book for 1-6 people.
    </p>
    <p>
      For larger parties or for those who would rather book by phone, call 
      <a
        href="tel: +46725113113"
      >
        072 511 3113
      </a>
       or email us at 
      <a
        href="mailto: reservation@malina.se"
      >
        reservation@malina.se
      </a>
      .
    </p>
    <p>
      <i>
        Please note that sitting time is calculated to 2,5hrs.
      </i>
    </p>
  </div>
  <div
    className="bookingFormContainer"
  >
    <div
      className="bookingForm"
    >
      <form
        onSubmit={[Function]}
      >
        <p>
          Select date:
        </p>
        <t
          allowSameDay={false}
          dateFormat="yyyy-MM-dd"
          dateFormatCalendar="LLLL yyyy"
          disabled={false}
          disabledKeyboardNavigation={false}
          dropdownMode="scroll"
          inlineFocusSelectedMonth={false}
          minDate={2019-09-10T15:50:59.470Z}
          monthsShown={1}
          nextMonthButtonLabel="Next Month"
          nextYearButtonLabel="Next Year"
          onBlur={[Function]}
          onChange={[Function]}
          onClickOutside={[Function]}
          onFocus={[Function]}
          onInputClick={[Function]}
          onInputError={[Function]}
          onKeyDown={[Function]}
          onMonthChange={[Function]}
          onSelect={[Function]}
          onYearChange={[Function]}
          preventOpenOnFocus={false}
          previousMonthButtonLabel="Previous Month"
          previousYearButtonLabel="Previous Year"
          readOnly={false}
          renderDayContents={[Function]}
          selected={2019-09-10T15:50:59.469Z}
          shouldCloseOnSelect={true}
          showMonthYearPicker={false}
          showQuarterYearPicker={false}
          showTimeInput={false}
          showTimeSelect={false}
          strictParsing={false}
          timeCaption="Time"
          timeInputLabel="Time"
          timeIntervals={30}
          withPortal={false}
        />
        <div
          className="selectTime"
        >
          <p>
            Select time:
          </p>
          <input
            className="radioButtonsTime"
            disabled={false}
            name="timeOfBooking"
            onChange={[Function]}
            type="radio"
            value="18:00:00"
          />
          <p
            className="timeToBook firstTime"
          >
            18:00
          </p>
          <input
            className="radioButtonsTime"
            disabled={false}
            name="timeOfBooking"
            onChange={[Function]}
            type="radio"
            value="21:00:00"
          />
          <p
            className="timeToBook"
          >
            21:00
          </p>
        </div>
        <div
          className="guests"
        >
          <label
            htmlFor="guests"
          >
            Number of guests 
            <i>
              (max: 6)
            </i>
             : 
          </label>
          <input
            max="6"
            min="1"
            name="numberOfGuests"
            onChange={[Function]}
            placeholder="Number of guests?"
            type="number"
            value={1}
          />
        </div>
        <div
          className="name"
        >
          <label
            htmlFor="name"
          >
            Name: 
          </label>
          <input
            name="name"
            onChange={[Function]}
            placeholder="Name"
            type="text"
            value=""
          />
        </div>
        <div
          className="email"
        >
          <label
            htmlFor="email"
          >
            Email: 
          </label>
          <input
            name="email"
            onChange={[Function]}
            placeholder="name@email.com"
            type="email"
            value=""
          />
        </div>
        <div
          className="phone"
        >
          <label
            htmlFor="phone"
          >
            Phone: 
          </label>
          <input
            name="phone"
            onChange={[Function]}
            placeholder="Phonenumber"
            type="text"
            value=""
          />
        </div>
        <div
          className="gdpr"
        >
          <label
            htmlFor="gdpr"
          >
            GDPR
          </label>
          <input
            checked={false}
            onChange={[Function]}
            type="checkbox"
          />
        </div>
        <button
          disabled={true}
          type="submit"
        >
          Submit
        </button>
      </form>
    </div>
  </div>
</div>
`;
